# Lines starting with hashtag are comments and ignored by loader.

# Blank lines are also ignored by loader.

# Variable names are case-sensitive!

# If opened in Notepad++, I recommend setting INI or Makefile syntax highlighting in Language menu.

# Name of the map is that will be displayed in map select submenu.
Name = Test Map

Gravity = 2.0

# Preview Image is not needed to be explicitly defined here, as
# image file with same name is to be used implicitly as preview.

# Textures for each map block/element
# Not defining texture for a specific block does not cause error,
# but the block will be automatically assigned a dummy red texture.
# Textures should be placed in a separate directory specific to this map,
# within gamedata/textures directory. The specific directory name should be
# the same as the map file name without the extension part.
# In this case the directory is: gamedata/textures/map_test_good/

# Foreground blocks are at the same depth as the players,
# meaning they can be used as either floor or wall, since
# the players will collide with them.
# The following chars are used for defining foreground blocks in this map:
# BDFGHIJ
# Remaining chars to be used as foreground blocks in this map: KLQT

#B = floor.bmp # intentionally commented to test if B blocks really assigned red texture
D = conc02light.bmp
F = floor.bmp
G = floor.bmp
H = floor.bmp
I = floor.bmp
J = crate.bmp

# Background blocks are 1 unit away from the players' depth towards
# the background, they can be used as background walls.
# The following chars are used for defining background blocks in this map:
# acnor
# Remaining chars to be used as background blocks in this map: empsuvwxyz

a = brick1.bmp
c = brick2.bmp
n = aztec01.bmp
o = brick1.bmp
r = brick1.bmp

# Pickupable items:
# '2' char represents pistol.
# '3' char represents machine gun.
# '4' char represents bazooka.
# '+' char represents health/medkit.
# Since these items are in the foreground, a background block might be implicitly
# created behind them, if there is a previously created NEIGHBOR background block
# next to them. In such case, that previous background block's texture will be
# applied, otherwise NO background block will be created behind the item.

# 'S' char represents spawn/start point. Multiple 'S' chars can be placed on the map.
# Number of spawn points might define the max allowed players on the map in the future but
# now players don't collide, so it is not yet a hard limit.
# A spawn point is similar to pickupable items but it is not visible.
# A background block might be implicitly created with the same rule as with pickupable items.
# Since a player can spawn only in standing position, placing a spawnpoint in a low-height
# tunnel where only crouching is possible, is considered as map design error.

# '^' char represents a vertical jump pad that launches the player in the air vertically (upwards).
# '<' char is reserved for (not yet supported) a jump pad that launches the player in the up-left direction.
# '>' char is reserved for (not yet supported) a jump pad that launches the player in the up-right direction.
# Jump pads are foreground blocks like walls thus the player collides with them.
# If there is a previous neighboring foreground block next to them, its texture will be applied, otherwise
# the texture specified for that specific jump pad character will be used.
# They work only when approached from specific direction, e.g. vertical jump pad launches the player only if
# the player approaches it from above.

^ = floor.bmp

# You need to define how much jump force should be applied to the player by each jump pad.
# The way to do that is to define variables with the following naming convention:
# jumppad_#
# where # stands for the index of the specific jump pad.
# The indexing of jump pads starts from 0, and you should follow the order as they are placed in the
# layout definition lines, from line to line, top to bottom, where each line is processed from left to right.
# Number of jump pad force definition variables must equal to the number of jump pads in the map layout.
#
# The value you set in the variable is a multiplier to a regular player-induced jump force.
# This value must be positive.
# For example, to define the jump force for jump pad 0, with magnitude being the same as a regular jump:
# jumppad_0 = 1.0
#
# To define a jump force that is 30% bigger than regular jump:
# jumppad_0 = 1.3

jumppad_0 = 1.0
jumppad_1 = 2.0

# '\' and '/' chars are reserved for (not yet supported) stairs.

# If there is no '=' assignment char in a line and not it is not ignored line, it is treated as
# layout line.
# Map layout consists of lines of chars not containing either '#' or
# '=' chars. The map layout contains the blocks a.k.a. the elements
# of the map in multiple lines.
# Space chars represent empty block.
# Since all lines are trimmed before being processed, starting layout definition with whitespaces
# are strictly not recommended.

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa  aaaaaaaa
cccccccccccccccccccccccccccccc  cccccccc
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa  aaaaaaaa
ooooacno^ooooooooooooooooooooo  oooooooo
nnnnnnnnnnn4nnnnnnnnnnnnnnnnnn  nnnnnnnn
oSoooooooooJoooooSoooooooooooo  oooSoooo
rrrrrrrrrrJJrrrrrrrrrrrrrrrrrr  rrrrrrrr
aaa##aaaaJJJJaaaaaaa2a3a+aaaaa  aaaaaaaa 2 +
BIJ##FGBIJDBHGBIJDBFGBIJDBFGBI  DBFGBIJD^B B  
BIJ##FGBIJDBHGBIJDBFGBIJDBFGBI  DBFGBIJD

# After or in between the map layout lines, we do not accept anything else.
