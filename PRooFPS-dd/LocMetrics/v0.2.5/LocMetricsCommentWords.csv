Word,Count
the,989
is,735
to,727
we,550
in,489
*,485
be,436
this,433
for,399
,333
of,328
it,312
should,301
and,297
not,277
server,252
if,243
by,242
are,216
a,204
|,200
so,181
player,175
on,171
as,167
will,163
that,153
only,153
client,149
at,141
with,140
also,132
when,130
but,123
###################################################################################,122
from,121
can,120
I,117
because,116
since,114
TODO:,113
map,111
game,109
already,107
clients,101
same,101
there,100
-,99
have,94
here,92
case,90
need,87
class,85
just,84
time,83
or,82
all,82
now,78
out,78
use,74
set,73
=,66
which,63
###############################,63
might,63
up,63
2,62
Made,61
other,61
PRooFPS-dd,60
Entertainment,60
\PR00F88,\,60
dont,60
maps,60
West,60
Whiskhyll,60
test,58
used,58
name,57
check,56
bullet,55
message,55
would,53
PGE,51
players,51
even,51
they,50
still,50
once,49
0,49
change,49
has,49
\__func__,\,48
after,48
This,48
angle,48
---------------------------------------------------------------------------,47
no,46
position,46
future,46
->,46
about,46
current,45
too,45
function,44
The,44
object,44
weapon,44
handling,43
jump,43
before,43
state,43
##############################,42
*<,42
end,41
NOT,41
new,40
however,40
its,40
do,40
know,40
later,40
1,39
invoked,39
cannot,39
an,39
limit,39
positive,39
physics,38
could,38
..,38
instance,38
engine,38
any,38
sure,38
least,37
always,37
way,36
some,36
then,36
messages,36
make,36
otherwise,36
handle,35
Y,35
send,35
must,35
again,34
sent,34
crouching,34
being,34
mapcycle,34
line,34
value,33
},33
{,33
static,33
due,33
first,32
received,32
does,32
these,32
needed,31
msg,31
using,31
remaining,31
frag,31
@param,31
\server,\,31
update,30
fail,30
empty,30
%s,29
xhair,29
anyway,29
moment,29
I'm,29
connection,29
\here,\,29
want,29
during,29
our,29
both,29
negative,28
actually,28
network,28
false,28
//,28
user,28
such,27
table,27
valid,27
namespace,27
@return,27
based,27
available,27
was,26
window,26
above,26
their,26
means,26
width,25
initialized,25
pkt,25
than,25
2024,25
somersault,25
amount,25
PURE,25
items,25
had,25
PCH,25
testing,25
invoke,24
enough,24
following,24
been,24
where,24
data,24
2023,24
\mode,\,24
input,24
more,24
item,24
call,24
We,24
char,24
debug,23
throw,23
Dear,23
thus,23
explosion,23
frame,23
Player,23
how,23
2D,22
properly,22
main,22
currently,22
+,22
\0,\,22
inside,22
loaded,22
PRIVATE,21
################################,21
__func__);,21
\However,\,21
every,21
text,21
PUBLIC,21
ctor,21
into,21
functions,21
see,21
them,21
why,21
over,21
don't,21
try,21
PROTECTED,21
terminate,20
my,20
happen,20
GUI,20
jumping,20
count,20
elements,20
requires,20
config,20
If,20
like,20
consume,20
allow,19
next,19
contain,19
switch,19
better,19
triggering,19
won't,19
force,19
get,19
updated,19
bit,19
reset,19
winning,19
So,19
id,19
different,19
built,19
screen,19
addHintToItemByCVar(),19
number,19
A,18
changing,18
flag,18
ImGui,18
respawn,18
between,18
newline,18
down,18
proofps_dd,18
values,18
yet,18
2022,18
previous,18
height,18
initialize(),18
code,17
True,17
Physics,17
zero,17
receive,17
maybe,17
crouch,17
loop,17
side,17
although,17
doesn't,17
run,17
camera,17
block,17
calculated,17
without,17
keep,16
back,16
stop,16
processing,16
depends,16
start,16
file,16
sending,16
won,16
last,16
true,16
\itself,\,16
point,16
added,16
display,16
below,15
instances,15
MsgGameSessionStateFromServer,15
either,15
GameMode,15
60,15
else,15
per,15
Since,15
For,15
tests,15
e.g,15
m_vecOldNewValues.at(),15
struct,15
stays,15
loading,15
big,15
\this,\,15
until,15
\check,\,15
itself,15
move,15
m_vecOldNewValues,15
long,14
default,14
But,14
viewport,14
const,14
tickrate,14
Server,14
error,14
logic,14
changed,14
good,14
return,14
old,14
wait,14
shouldnt,14
looks,14
pressing,14
updates,14
something,14
really,14
come,14
center,14
string,14
add,14
runtime,14
It,13
find,13
expected,13
matter,13
own,13
bullets,13
fully,13
sends,13
Note,13
coordinate,13
having,13
stuff,13
well,13
extra,13
20,13
\app,\,13
400,13
player's,13
Used,13
\point,\,13
invulnerability,13
required,13
preparePktMsgAppFill(),13
compile-time,13
coordinates,13
never,13
initPkt,13
strafe,13
In,12
\"\\,12
PRooFPSddPGE,12
unique,12
go,12
constructed,12
right,12
allowed,12
\clients,\,12
Mapcycle,12
\now,\,12
==,12
list,12
blocks,12
\ground),\,12
collision,12
operator,12
padding,12
mouse,12
Maps,12
delete,12
process,12
(still,12
think,12
put,12
Game,12
client-side,12
Z,11
injects,11
app,11
someone,11
here:,11
read,11
standing,11
upon,11
proper,11
clear,11
\name,\,11
system,11
bool,11
automatically,11
what,11
who,11
column,11
specific,11
header,11
ground,11
packet,11
somersaulting,11
rid,11
condition,11
level,11
created,11
size,11
let,11
horizontal,11
release,11
MsgUserUpdateFromServer,11
offset,11
order,10
points,10
much,10
derived,10
initiated,10
very,10
each,10
0);,10
400},10
support,10
area,10
avoid,10
disconnected,10
m_mapPlayers,10
anything,10
reached,10
wpn,10
application,10
needs,10
Strafe,10
server-side,10
executed,10
killer,10
related,10
elapsed,10
shoot,10
assertion,10
100,10
connecting,10
iteration,10
death,10
session,10
create,10
movement,10
Hz,10
Map,10
\{0,\,10
version,10
pMsgApp,10
design,10
int,10
\initialize(),\,10
goes,10
draw,10
variables,10
log,10
manually,10
show,9
most,9
validation,9
server's,9
rate,9
\and"\\,9
\(0,0)\,9
commented,9
everything,9
though,9
actual,9
few,9
Client,9
i,9
ignored,9
\getConsole().OLn("\InputHandling::%s():\,9
Total,9
expect,9
another,9
further,9
restart(),9
fall,9
Please,9
damage,9
\class,\,9
FPS,9
MsgUserSetupFromServer,9
anymore,9
PPPKKKGGGGGG,9
objects,9
include,9
touched,9
\"\bitwise\,9
cause,9
\getConsole().EOLn("\ERROR:\,9
operands,9
\%f,\,9
doing,9
scaling,9
restart,9
multiple,9
explained,9
self,9
3D,9
container,9
mid-air,9
statement,9
existing,9
Available,9
x,9
falling,9
rendering,9
sClientUserName.c_str());,9
\maps,\,9
while,9
UnitTest.h,9
:,9
\it,\,8
1st,8
relevant,8
meantime,8
i.e,8
\player,\,8
invokes,8
resources,8
leading,8
unit,8
TOP,8
killed,8
beginning,8
decide,8
mode,8
able,8
windows,8
failed,8
initial,8
disconnect,8
\change,\,8
Count,8
NULL,8
irrelevant,8
\won,\,8
one,8
hit,8
trigger,8
note,8
\that,\,8
request,8
\client,\,8
explicit,8
reposition,8
background,8
\only,\,8
present,8
ignore,8
including,8
true);,8
client's,8
rendered,8
continuous,8
store,8
easy,8
And,8
\too,\,8
\map,\,8
array,8
T,8
assert(false);,8
probably,8
handled,8
\%f"\,\,8
\players,\,8
instead,8
\getConsole().OLn("\WeaponHandling::%s():\,8
got,8
event,8
defined,8
weapons,8
tick,8
full,8
\getConsole().EOLn("\InputHandling::%s():\,8
executes,8
part,8
on-ground,8
connected,8
pos,8
active,8
On,7
thread,7
separate,7
impact,7
detect,7
work,7
names,7
3,7
less,7
lines,7
started,7
regression,7
adding,7
\instance,\,7
MsgUserNameChangeAndBootupDone,7
positions,7
cell,7
row,7
pixels,7
called,7
countdown,7
CVAR,7
receives,7
doesnt,7
evaluate,7
boundaries,7
invalid,7
columns,7
somehow,7
bottom,7
direction,7
important,7
world-space,7
behind,7
auto-crouch,7
space,7
moved,7
reason,7
save,7
Unit,7
vertical,7
Only,7
0;,7
example,7
calls,7
(self),7
\getConsole().EOLn("\PlayerHandling::%s():\,7
fails,7
content,7
To,7
\error,\,7
Handling,7
4,7
calculate,7
small,7
visible,7
obviously,7
found,7
allocated,7
Set,7
seconds,7
\empty,\,7
AFTER,7
pass,7
handles,7
dump,7
load,7
etc,7
op,7
require,7
spawnpoint,7
\100,\,7
earlier,7
newly,7
me,7
null-terminated,7
processed,7
purpose,7
removed,7
build,7
idea,7
shutdown,7
initializes,7
result,6
singleton,6
\"\999"\\,6
enabled),6
\%u"\,\,6
take,6
done,6
packets,6
place,6
TearDown(),6
ImGUI,6
reminding,6
border,6
<msgAppName>,6
makes,6
calculations,6
properties,6
remove,6
(e.g,6
<msgAppId>,6
health,6
\set,\,6
coords,6
######################################,6
\Furthermore,\,6
<count>,6
apply,6
X,6
relative,6
blocksize_Y,6
pimpl,6
blocksize_Z,6
2nd,6
isGameRunning(),6
distance,6
safe,6
generated,6
recommended,6
/,6
common,6
notification,6
auto,6
standard,6
dragging,6
vector,6
easily,6
immediately,6
ImGui's,6
\message,\,6
\file,\,6
were,6
delay,6
type,6
frags,6
menu,6
definition,6
connHandleServerSide:,6
handleUserUpdateFromServer(),6
\line,\,6
onGameRunning(),6
contains,6
bad,6
\reason,\,6
\bullet,\,6
accepted,6
conditions,6
blocksize_X,6
availableMapsGet(),6
TODO,6
\getConsole().OLn("\PRooFPSddPGE::%s():\,6
that:,6
says,6
calling,6
\case,\,6
setUp(),6
sets,6
given,6
timestamp,6
logging,6
early,6
flags,6
(in,6
left,6
deleting,6
correct,6
\pge,\,6
stay,6
specified,6
spaces,6
Bullet,6
operating,6
us,6
Retrieves,6
introduce,6
Config,6
success,6
top,5
rect,5
higher,5
THIS,5
nice,5
Misc,5
pkts,5
look,5
\%d,\,5
starts,5
you,5
PgeGnsServer::m_mapClients,5
pistol,5
\names,\,5
control,5
Minimap,5
nHeight,5
anywhere,5
step,5
handler,5
unlike,5
queue,5
updateOldValues(),5
When,5
filename,5
forces,5
care,5
spawnpoints,5
\force,\,5
nWidth,5
callback,5
single,5
finally,5
\%u!"\,\,5
consecutive,5
real,5
faster,5
mind,5
Main,5
PgeGnsServer::m_mapClients:,5
keeping,5
cpp11,5
front,5
\getConsole().EOLn("\WeaponHandling::%s():\,5
requested,5
kept,5
non-empty,5
\frame,\,5
\mapcycle,\,5
%u,5
\window,\,5
------>|,5
evaluated,5
malicious,5
\%d!"\,\,5
\above,\,5
drawing,5
Because,5
handleUserSetupFromServer(),5
decided,5
characters,5
special,5
injected,5
DOWNWARDS,5
this:,5
false;,5
layout,5
within,5
colliding,5
cursor,5
systems,5
explicitly,5
implicitly,5
exactly,5
initialization,5
\anyway,\,5
actions,5
%d,5
many,5
PRooFPS-dd-PGE(400)::m_mapPlayers:,5
info,5
kind,5
basically,5
silently,5
scrolling,5
bounds,5
animation,5
head,5
server-only,5
Pure,5
lerping,5
PRooFPS-dd-PGE(0)::m_mapPlayers:,5
userDisconnected,5
Note:,5
replicated,5
implemented,5
Weapon,5
applies,5
non-dry,5
configuring,5
Both,5
\durations,\,5
possible,5
stats,5
MsgMapChangeFromServer,5
!!,5
UPWARDS,5
argument,5
pretty,5
/*,5
WA,5
saved,5
stand,5
elem,5
changes,5
MUST,5
(inject),5
didnt,5
index,5
connHandleServerSide);,5
longer,5
Strafe::NONE,5
PRooFPS-dd-PGE(100)::m_mapPlayers:,5
isNetDirty(),5
simply,5
members,5
wanted,5
receiving,5
may,5
enable,5
abstract,5
files,5
PRooFPS-dd-PGE::m_mapPlayers,4
mapcycleGet(),4
tell,4
foreground,4
generates,4
\%d"\,\,4
title,4
\well,\,4
dtor,4
mapped,4
versions,4
textures,4
scenario,4
Then,4
\side,\,4
Byte,4
booted,4
std::string,4
hInstance,4
drawDearImGuiCb(),4
uses,4
tested,4
progress,4
memory,4
\run,\,4
(but,4
\reached,\,4
(could,4
listen-server,4
win,4
Jump,4
checking,4
sanity,4
ScrollX,4
themselves,4
become,4
variable,4
those,4
cleared,4
transition,4
informational,4
Thus,4
\2,\,4
\machine,\,4
solve,4
CENTER;,4
{},4
TO:,4
null,4
visibility,4
refresh,4
Check,4
\keybd_event(VK_RIGHT,\,4
bRet,4
lister,4
results,4
Current,4
Camera,4
pre-defining,4
\Also,\,4
\KEYEVENTF_KEYUP,\,4
controlled,4
https://github.com/proof88/PRooFPS-dd/issues/268,4
cant,4
bar,4
max,4
!=,4
thrown,4
graphics,4
N,4
v0.2.5,4
dx,4
\time,\,4
\%u,\,4
Event,4
MsgUserSetupFromServer(100),4
\LEFT,\,4
corner,4
Player.h,4
expecting,4
dialog,4
\so,\,4
\CENTER,\,4
access,4
off,4
suicide,4
API,4
\frames,\,4
Dont,4
\%s!"\,\,4
connections,4
returns,4
shortening,4
behavior,4
\engine,\,4
around,4
XHair,4
\true,\,4
O2,4
travel,4
preview,4
nCmdShow,4
explosions,4
inform,4
<,4
cpp17,4
nulls,4
instance:,4
rename,4
std::this_thread::sleep_for(std::chrono::milliseconds(200));,4
performance,4
crash,4
CConsole,4
Menu,4
R,4
O1,4
calculates,4
identifying,4
setting,4
Ctor,4
MenuState::None,4
Object3D,4
dirty,4
\manually,\,4
\position,\,4
\GameMode,\,4
O,4
\getConsole().EOLn("\PRooFPSddPGE::%s():\,4
Multiplier,4
impacting,4
\value,\,4
handlePlayerDied(),4
\also,\,4
sounds,4
\getConsole().OLn("\PlayerHandling::%s():\,4
old-new,4
treated,4
GAME_GRAVITY_CONST,4
somewhere,4
\60,\,4
did,4
wheel,4
MsgUserSetupFromServer(0),4
dy,4
\Count,\,4
minimap,4
spawn,4
modify,4
original,4
BeginDragDropSource(),4
effect,4
>,4
exception,4
GNS,4
%c,4
----->|,4
traffic,4
previously,4
\keybd_event(VK_RETURN,\,4
DUE,4
graceful,4
shows,4
hPrevInstance,4
disconnecting,4
Force,4
reference,4
stepSomersaultAngleServer(),4
MsgUserConnectedServerSelf,4
getWantToStandup(),4
Regression,4
unmag,4
Some,4
Columns,4
machinegun,4
Network,4
events,4
comments,4
strClr(),4
winner,4
Default,4
\%s,\,4
Make,4
m_connHandleServerSide,4
becomes,4
action,4
decrease,4
fContentHeight,4
depend,4
strafing,4
restricted,4
towards,4
Joe,4
depth,4
notified,4
key,4
turn,4
headers,4
across,4
cells,4
Table,4
connHandleServerSide,4
triggers,4
Logic,4
unchanged,4
\filename!"\,\,4
element,4
E,4
playerPair,4
Updates,4
managed,4
saves,4
\nFrags,\,4
###########################################################################,4
\invoked,\,4
texts,3
\loaded,\,3
deleted,3
connHandle,3
Process,3
HAS,3
explosion-induced,3
Returns,3
player.getImpactForce(),3
By,3
goal,3
(-1.2f,3
Y:,3
directly,3
buffer:,3
\v0.2.5,\,3
getPure().getCamera().getViewport():,3
health:,3
\members,\,3
shoots,3
usual,3
\invulnerability,\,3
written,3
widths,3
6,3
situation,3
handleUserNameChange(),3
\purpose,\,3
UPGRADE,3
\code,\,3
state:,3
\impact,\,3
initially,3
.nTxPktPerSecond,3
OS,3
unproject,3
partially,3
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,3
.nTxPktTotalCount,3
rules,3
\us,\,3
\example,\,3
initializers,3
configuration,3
bring,3
ImGuiCol_FrameBg,3
selected,3
image,3
AppMsgId,3
Fails,3
\"\;\,3
birth,3
\"\Id"\\,3
specifying,3
pullTrigger(),3
\getConsole().SetLoggingState("\4LLM0DUL3S"\,\,3
Cpp20,3
ourselves,3
containing,3
shot,3
succeed,3
ignoring,3
correctly,3
How,3
lpCmdLine,3
players:,3
Dtors,3
\happen,\,3
reconnect,3
nFrags,3
leave,3
issue,3
&&,3
60)));,3
fall-through,3
Windows,3
\size,\,3
Sounds,3
'=',3
Pkt/Second,3
modifies,3
connect,3
matrix,3
name:,3
equal,3
\feature,\,3
Tests,3
tests.push_back(std::unique_ptr<UnitTest>(new,3
checkpoint,3
validity,3
colliders,3
considering,3
macro,3
leaving,3
scheduler,3
testMethod(),3
record,3
.nInjectPktTotalCount,3
player.getName().c_str());,3
.nRxPktPerSecond,3
\input,\,3
switching,3
button,3
unspecified,3
components,3
radius,3
\Anyway,\,3
Y-pos,3
period,3
controls,3
Error,3
fixed,3
ImGuiTableFlags_SizingStretchSame,3
classes,3
destructed,3
\removed,\,3
etc.),3
working,3
nice:,3
air,3
jump(),3
additional,3
\path,\,3
FUNCTIONALITY!!,3
convenience,3
play,3
MsgUserUpdateFromServer(0),3
\Apple,\,3
https://github.com/proof88/PRooFPS-dd/issues/251,3
intentionally,3
lack,3
+=,3
problem,3
strict,3
Gets,3
cover,3
GAME_PLAYERS_POS_Z),3
bootup,3
collide,3
MsgDeathNotificationFromServer,3
determine,3
modifying,3
calculating,3
\10,\,3
(although,3
.nInjectPktPerSecond,3
PlayerHandling,3
Clients,3
going,3
DeathMatchMode,3
smaller,3
Y-axis,3
User,3
iterations,3
\used,\,3
legs,3
fetch,3
adds,3
desktop/native,3
\minimap,\,3
MsgUserUpdateFromServer(100),3
serverGravity(),3
\rate,\,3
ImGuiTableColumnFlags_IndentEnable,3
LOAD,3
legal,3
unsure,3
shared,3
ok,3
\screen,\,3
NEWER,3
X:,3
fps,3
verify,3
TO,3
\0.9747f,\,3
m_fDamageAreaSize,3
Changing,3
MAYBE,3
difference,3
wont,3
0.f,3
\not,\,3
ticket,3
--->|,3
0.2f,3
EventLister,3
here),3
upwards,3
AppMsgId:,3
shake,3
jump-induced,3
maintain,3
\connHandleServerSide,\,3
forward,3
important:,3
generate,3
ongoing,3
-1,3
definitely,3
designated,3
filesystem,3
\client-side,\,3
timer,3
Invokes,3
evaluating,3
\vector!"\,\,3
exist,3
iterating,3
cfgProfiles,3
randomly,3
box,3
custom,3
iterate,3
implement,3
displaying,3
hidden,3
Reason,3
connecting:,3
flip,3
sound,3
approach,3
aka,3
THAT,3
operations,3
reload,3
CVARs,3
placed,3
greater,3
touch,3
WinMain(),3
initialize,3
handleUserDisconnected(),3
things,3
pending,3
MsgUserCmdFromClient,3
eventually,3
InputHandling::clientMouseWhenConnectedToServer(),3
ImGuiTableColumnFlags_WidthStretch,3
Stretch,3
vs,3
alignment,3
ptr,3
regardless,3
are:,3
path,3
\angle,\,3
\20,\,3
MsgUserNameChangeAndBootupDone(0),3
low,3
duration,3
Before,3
Next,3
\future,\,3
console,3
\first,\,3
exact,3
tried,3
starting,3
spacing,3
planning,3
As,3
\again,\,3
updating,3
serverSendUserUpdates(),3
hitting,3
extended,3
Apple,3
Pkt,3
\fit,\,3
source,3
0),3
logs,3
fishy,3
bg,3
App,3
\anything,\,3
thing,3
\return,\,3
defaults,3
elapse,3
There,3
\mapPlayers,\,3
\%f!"\,\,3
yes,3
\rect,\,3
MsgCurrentWpnUpdateFromServer,3
CPP,3
pge,3
below),3
comment,3
roughly,3
MsgUserSetupFromServer(400),3
terminates,3
sizing,3
Command,3
\explosion,\,3
\table,\,3
Id,3
Msg,3
invoking,3
nothing,3
disable,3
permanent,3
dl->Flags,3
fullscreen,3
closed,3
transparent,3
(not,3
\failed!"\,\,3
gravity,3
assuming,3
\conditions,\,3
hopefully,3
\condition,\,3
workaround,3
configured,3
crate,3
\damage,\,3
stick,3
copy,3
shooting,3
MsgBulletUpdateFromServer,3
xhair's,3
stored,3
understand,3
.nRxPktTotalCount,3
onto,3
ImGui::GetMainViewport(),3
whatever,3
SAME,3
forget,3
\"\:"\\,3
\died!"\,\,3
thinking,3
everyone,3
HandlePlayerDied(),3
whole,3
\%b!"\,\,3
appear,3
includes,3
ref,3
\ctor,\,3
FINALLY,3
weights,3
WeaponHandling,3
finding,2
\FAILED!"\,\,2
finishes,2
remember,2
\good,\,2
Configuration,2
overflow,2
Use,2
send(),2
\top,\,2
provides,2
lower-right,2
moves,2
----------->|,2
\thread,\,2
overrun,2
\"\Player::%s():\,2
\visitor"\\,2
SFX,2
https://en.cppreference.com/w/cpp/utility/variant/visit,2
nor,2
complete,2
plays,2
collisions,2
Up,2
\fine,\,2
copied,2
causing,2
),2
availableMapsGetAsCharPtrArray(),2
easier,2
---->|,2
pre-compiled,2
setuping,2
\"\:)"\);\,2
PureObject3D&,2
durations,2
rcvd,2
UPDATE:,2
deaths,2
index:,2
\found,\,2
interval,2
GFX,2
\pickup,\,2
MOUSEEVENTF_ABSOLUTE,2
isGameWon(),2
5),2
Fixed,2
decision,2
engine's,2
ticks,2
as:,2
against,2
\tick,\,2
provide,2
ImGui::GetWindowSize(),2
\"\..."\\,2
disjoint,2
on-the-fly,2
prevMenuState,2
unexpected,2
InputHandling,2
\"\!"\).c_str());\,2
failed:,2
finish,2
temporarily,2
\gui,\,2
~1000,2
player.getGravity());,2
\weapon!"\,\,2
bullet's,2
hole,2
\itKiller->first.c_str(),\,2
\CConsole::getConsoleInstance().SetLoggingState(PureTextureManager::getLoggerModuleName(),\,2
darker,2
shrink,2
neighbor,2
gamemode,2
loader,2
signal,2
careless,2
Rx:,2
\getConsole().EOLn("\drawMinimap::%s():\,2
equivalent,2
triggered,2
\MsgServerInfoFromServer,\,2
fires,2
\sophisticated,\,2
simulates,2
connhandle,2
ImGuiTableFlags_SizingFixedFit,2
forced,2
\dir,\,2
showing,2
imconfig.h,2
\xhair,\,2
mean,2
WHILE,2
didn't,2
essential,2
Example,2
letting,2
bits,2
m_maps.load(),2
createAndGet(),2
\%s"\,\,2
settle,2
lower,2
procedure,2
szCVarSvMap,2
\etc.,\,2
nulled,2
In-Game,2
Called,2
player.getHeightStartedFalling(),2
\(cfgProfiles.getVars()["\testing"\].getAsBool()\,2
COMMENTED,2
happening,2
\ImGui::PushStyleVar(ImGuiStyleVar_CellPadding,\,2
PGEcfgProfiles,2
overrides,2
increased,2
(should,2
\container,\,2
\sWeaponBecomingAvailable.c_str(),\,2
detected,2
finishing,2
reconnecting,2
takeItem(),2
crosshair,2
X-axis,2
hovered,2
\row,\,2
NET,2
*3,2
buffer,2
\0.0f,\,2
mapcycle.txt,2
style,2
uniqueness,2
\visible,\,2
\config,\,2
except,2
\"\"\),\,2
went,2
\fPlayerAngleZ,\,2
member,2
referring,2
Null,2
StartGame(),2
_later_,2
\bounds,\,2
received:,2
getConsole().OLn(,2
\getConsole().EOLn("\Started\,2
---------->|,2
room,2
y,2
seen,2
moments,2
\yet,\,2
\action!"\,\,2
shoot:,2
{0},2
network:,2
\workaround,\,2
transparency,2
great,2
\project2dTo3d(0,0,...)\,2
\static,\,2
improved,2
\"\shared"\\,2
durElapsedMicrosecs,2
weight,2
project,2
multi-line,2
checkbox,2
MsgUserNameChangeAndBootupDone(100)-->|,2
combined,2
firing,2
Application's,2
fit,2
(iHdrCol,2
CANNOT,2
\loading,\,2
\{100,\,2
target,2
trying,2
simulate,2
dimensions,2
(player.isFalling()),2
\CConsole::getConsoleInstance().SetLoggingState(PureTexture::getLoggerModuleName(),\,2
50);,2
roll/flip,2
carry,2
\returned,\,2
CVAR_TICKRATE,2
busy,2
unnecessary,2
see:,2
creation,2
Update,2
wanna,2
listbox,2
Gravity(),2
16,2
cancel,2
maxFPS,2
customized,2
\O2,\,2
MsgCurrentWpnUpdateFromServer(0),2
\blinking,\,2
\"\map_"\\,2
align,2
checked,2
passing,2
\"\999/9999"\\,2
floating,2
\std::string("\ERROR:\,2
\bootup,\,2
sampled,2
cleanup,2
float,2
tick/physics,2
ImGuiDragDropFlags_SourceAllowNullID,2
GAME_MAXFPS_MAX,2
delayed,2
millisecs,2
cases,2
manual,2
knows,2
share,2
\beginning,\,2
ready,2
unhandled,2
making,2
\frags!"\,\,2
successfully,2
\false,\,2
BeginTable,2
Tx:,2
wstring,2
\yes,\,2
dependee,2
nTimeRemainingSecs,2
backward,2
disallow,2
random,2
Converts,2
fix,2
compared,2
\already,\,2
PRooFPS-dd-PGE::m_gameMode,2
truncating,2
blank,2
\latency,\,2
Pointer,2
blocking,2
VSync,2
\reset,\,2
\collision,\,2
gameMode.renamePlayer(),2
happens,2
holding,2
Mode,2
placing,2
work),2
signaled,2
complicated,2
fine,2
e.g.:,2
anything),2
'it',2
released,2
GUI.h,2
\cooldown,\,2
there:,2
texture,2
side:,2
trailing,2
\test,\,2
end;,2
temporal,2
args,2
\clientHandleInputWhenConnectedAndSendUserCmdMoveToServer(),\,2
visual,2
\text,\,2
Dedicated,2
updatePlayer(),2
unsigned,2
primarily,2
rotated,2
\Mode"\\,2
everywhere,2
detects,2
PURE/PGE,2
\events,\,2
diameter,2
vertically,2
\RegTestBasicServerClient2Players,\,2
becoming,2
\values,\,2
std::set,2
zeroed,2
std::chrono::time_point<std::chrono::steady_clock>,2
ImGui::PopStyleVar();,2
payload,2
introduced,2
player.getPos().getNew().getY());,2
acceleration,2
linear,2
ID,2
std::exception(,2
represents,2
bPullUpLegs,2
An,2
col,2
covering,2
hierarchy,2
\dies,\,2
handshaked,2
\getConsole().EOLn("\Strafe\,2
duration:,2
tho,2
\v0.1.4,\,2
MsgUserConnectedServerSelf(100),2
stopping,2
Removes,2
checks,2
(only,2
settings,2
\collisions,\,2
became,2
\MOUSEEVENTF_ABSOLUTE,\,2
\circumstances,\,2
rounding,2
\up,\,2
applied,2
msecs,2
known,2
fast-forward,2
\millisecs,\,2
hasValidConnection(),2
Simple,2
\getConsole().EOLn("\Finished\,2
increasing:,2
\has,\,2
Initializes,2
Testing,2
WeaponHandling::createExplosionServer(),2
GameMode.cpp,2
IConfigHandler,2
\image,\,2
building,2
(after,2
alpha,2
19.f,2
taken,2
(NULL,2
TEMPORAL,2
almost,2
neither,2
required;,2
dynamic,2
Releases,2
\data,\,2
\all,\,2
reach,2
\weapon,\,2
\"\WWWWWWWWW0WWWWWWWWW0WWWWWWWWW0WWWWWWWWW0WWWW"\\,2
ROUGH,2
sophisticated,2
Sounds.h,2
adjusted,2
\default,\,2
destroy,2
GUI:,2
'\n';,2
\edge,\,2
crouch:,2
50,2
Death/Kill,2
tick-based,2
hide(),2
leads,2
wrong,2
\left!"\,\,2
up-to-date,2
sHint,2
\GUI::drawCurrentPlayerInfo(),\,2
overrid,2
ensures,2
live,2
itKiller->second.getFrags());,2
Input,2
affect,2
logger,2
\getConsole().EOLn("\XHair::%s():\,2
Although,2
picked,2
HWND,2
isFalling,2
playing,2
dev,2
moving,2
allocate,2
hDialogWndFullscreen,2
MsgMapItemUpdateFromServer,2
\instances,\,2
\blocks,\,2
bDelete,2
Scenario,2
object:,2
\Frags,\,2
First,2
pWpnBecomingAvailable->getUnmagBulletCount());,2
\iteration,\,2
MsgUserUpdateFromServer(400),2
simulation,2
nFallDurationMillisecs,2
bringup,2
\physics,\,2
wall,2
------------->|,2
server),2
hide,2
steps,2
C++,2
Configured,2
\on,\,2
\themselves,\,2
hence,2
TICK,2
trivial,2
client-only,2
getFragLimit(),2
\CVARs,\,2
\crouching,\,2
(pixels):,2
counted,2
jumpForce,2
msg.m_bulletId);,2
pointers,2
die,2
With,2
commits,2
incrementing,2
say,2
\initiated!"\,\,2
validConnection,2
heartbeat,2
assume,2
phenomenon,2
spawn:,2
assigned,2
displays,2
\done,\,2
30);,2
allowing,2
\kill,\,2
WORKAROUND,2
\called,\,2
------->|,2
runs,2
absolute,2
m_nServerSideConnectionHandle,2
postponed,2
fPlayerNameColWidthPixels,2
rectServerGameWindow.top),2
increases,2
availability,2
handleMapChangeFromServer(),2
unknown,2
iReplicateRowsForExperimenting,2
high,2
MsgUserConnectedServerSelf(0),2
PureVector,2
responsible,2
creates,2
Crosshair,2
\success,\,2
Entry,2
gfx,2
Listbox,2
playerPair.first.c_str());,2
soon,2
Customized,2
After,2
sLongHintLine,2
Timestamp,2
\correct,\,2
unindent,2
\playerPair.first.c_str(),\,2
insert,2
conn,2
subsequent,2
it->second.c_str());,2
Config::validate(),2
outgoing,2
XY,2
{400},2
confirmed,2
searched,2
\info,\,2
\frags,\,2
std::to_string(GetLastError()),2
reloading,2
maximum,2
Display,2
ungraceful,2
supposed,2
height:,2
Should,2
\open,\,2
Copy,2
use:,2
\functions,\,2
mag:,2
inconsistency,2
%b,2
ask,2
iCol,2
from:,2
\movement,\,2
(50/70),2
mode:,2
solution,2
rely,2
structure,2
newborn,2
failure,2
unable,2
creating,2
predefined,2
mess,2
\respawn,\,2
CVAR_CL_UPDATERATE,2
\colliding,\,2
is:,2
minimal,2
'#',2
\failed,\,2
WARNING:,2
total,2
and/or,2
\CConsole::getConsoleInstance().EOLn("\is_event_lister_contains_same_elems_as_vector\,2
list;,2
near,2
informed,2
contents;,2
UnitTest::run(),2
CameraHandling.h,2
owner,2
Inject:,2
rather,2
\disconnections,\,2
select,2
secs,2
nSeconds,2
\timer"\\,2
Unlike,2
\ground,\,2
analyzer,2
collides,2
losing,2
\getConsole().EOLn("\%s\,2
nobody,2
refactor,2
combo,2
Associated,2
\pixels,\,2
ping,2
believe,2
\right,\,2
whenever,2
\changed,\,2
address,2
(rectServerGameWindow.bottom,2
invulnerable,2
sync,2
\pixels*/,\,2
\RegTestBasicServerClient2Players(60,\,2
ImGuiDragDropFlags_None,2
occlusion,2
parameters,2
circular,2
Otherwise,2
gameplay,2
usable,2
optional,2
validate(),2
simulating,2
finds,2
dead,2
hDialogWndServerOrClient,2
Simulating,2
\GUI,\,2
Connected,2
int>(std::chrono::duration_cast<std::chrono::milliseconds>(timeStart,2
inject(),2
getpid(),2
inserting,2
(blocks):,2
places,2
sOldName,2
warn,2
child,2
unmag:,2
\"\megszentsegtelenithetetlensegeskedeseitekert"\\,2
away,2
funcs,2
updated:,2
displayed,2
refreshing,2
please,2
Maybe,2
gameMode,2
\directions,\,2
regarding,2
\static_cast<int>(nFallDurationMillisecs),\,2
NONE,2
react,2
static_cast<unsigned,2
client),2
searches,2
executable,2
\once,\,2
\height,\,2
seems,2
regular,2
up:,2
PRooFPS-dd-packet.h,2
Loading,2
commit,2
ordered,2
job,2
\successful,\,2
late,2
flexible,2
jump-up,2
virtual,2
assignment,2
\m_maps.getFilename(),\,2
Unique,2
platform,2
canFall(),2
World-space,2
\FindWindow(NULL,\,2
FindWindow(),2
corresponding,2
bDryRun,2
RIGHT,2
clearNetDirty(),2
Common,2
policies,2
CURRENT,2
availableMapsRefresh(),2
All,2
Always,2
dieing,2
render,2
Freeing,2
GameMode.h,2
getCrouchInput(),2
m_pge.getInput().getMouse(),2
forcing,2
addPlayer(),2
technique:,2
twice,2
killer's,2
top-level,2
speed,2
proofps_dd::MsgUserNameChangeAndBootupDone,2
\(PURE_SRC_ALPHA,\,2
\ImGuiTableFlags_SizingStretchProp,\,2
m_blocks_h,2
inject,2
Primary,2
Prepare,2
1080,2
prevActualStrafe,2
100},2
blinking,2
70,2
1024,2
MsgBulletUpdateFromServer:,2
utilize,2
detection,2
ImGuiWindowFlags_AlwaysAutoResize,2
DeathMatch,2
Files,2
division,2
depending,2
\nice,\,2
culling,2
wants,2
exe,2
CS,2
measuring,2
check:,2
setCanFall(),2
startSomersaultServer(),2
nAppendLastNChars,2
bState,2
BADDESIGN,2
Header,2
isFalling(),2
evaluates,2
\somersaulting,\,2
rest,2
guaranteed,2
NOW,2
\variables,\,2
Shuts,2
\always,\,2
MsgUserNameChange,2
precise,2
typical,2
handleUserConnected();,2
\singleton,\,2
clientHandleServerInfoFromServer(),2
MsgUserSetupFromServer;,2
general,2
treating,2
Somersaulting,2
flipped,2
65536),2
player.getTimeStartedFalling()).count();,2
\handle,\,2
inheritable,2
*/));,2
module,2
wish,2
click,2
parent's,2
\step,\,2
onGameInitialized(),2
directory,2
ImVec2(5.f,2
:),2
case-insensitive,2
missing,2
compiler,2
\else,\,2
MapItem,2
However,2
fScreenDimensionPercentageMax;,2
hold,2
slow,2
\Hz,\,2
errors,2
independent,2
\"\server"\\,2
\same,\,2
(if,2
They,2
\InputHandling,\,2
fPlayerPosXStarted,2
\"\respawn\,2
sLine,2
redundant,2
listening,2
defaulting,2
\getConsole().EOLn("\start\,2
guided,2
spatial,2
under,2
non-NONE,2
caused,2
SDKDDKVer.h,2
Must-have,2
reacts,1
\"\%s"\,\,1
Player.isDirty(),1
entry.path().filename().string().c_str());,1
sHint.c_str());,1
0.981f,1
SIMILAR,1
interface,1
Originally,1
notifies,1
invisible,1
\killer,\,1
LPVOID,1
\ones,\,1
playerServerSideConnHandle);,1
iSelectMapStart,1
\"\dry"\,\,1
program,1
During,1
\dump,\,1
other.m_audio;,1
m_mapReferenceObjects,1
sent/received,1
scenario:,1
MenuState::Exiting,1
visuals,1
░░░░░░░░░░▒▓▓██████████████████████████████▒▒███░▓█░▒███░▒█████▓▒▒▒▒▒▒▒▒▒▒▒████░▒▒▒▒▒▒▒▒█████████▓░▒████████▓░▓▓░▒████████████▒░███████▒░█████████████░▒████████████░▒█████████████░▒█████████████████████████████████████████████████████████▒░░░░░░░░░░░,1
\sure,\,1
\possible,\,1
tries,1
whitepace),1
\"\map_warhouse.txt"\\,1
define,1
latter,1
TEMPORARY,1
weighted,1
Networking.cpp,1
iActiveItemMapsAvailable,1
theoretically,1
dimension,1
stdafx.h,1
SV_MAP,1
(player.getStrafe(),1
rarely,1
disappear,1
DLL_PROCESS_ATTACH:,1
startBlinking(),1
AndBootupDone(100),1
(!m_pge.getNetwork().isServer()),1
enabled,1
huge,1
\"\9999"\\,1
20%,1
repositions,1
\fails,\,1
imply,1
thread-safe,1
remanining,1
btns,1
\self,\,1
\reload,\,1
\"\no"\,\,1
Mouse,1
1-param,1
Would,1
pkg,1
properly:,1
\anymore,\,1
proofps_dd::PRooFPSddPGE,1
rail,1
SetCursorPos(),1
\PRooFPS-dd-PGE::m_mapPlayers,\,1
Duration,1
Mag,1
conclusion,1
X-pos,1
condition:,1
stopped,1
frames,1
STARTUPINFO,1
EventLister.cpp,1
player.getPos().set(,1
msg.m_bAvailable,1
ASAP,1
\nDeadConnHandleServerSide,\,1
\Panel."\\,1
Valid,1
SHIFT,1
Join,1
m_timeTaken,1
widest,1
\PFL::random(0,\,1
decreasing,1
fPureY,1
\m_fGravity,\,1
\wpn,\,1
▓████████░░░░░░░░░░░░░░░░░░░░████████▓░░░░░░░░█████████░░░▒██▒▒▓█████▓████▓▒▒██▓░░▒█████████▓▒█████████▒░░▓████████░░░░░░░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓░░░░░░░░░▒█████████░░░░░░░░░░░░░░░░░░░▓█████████▓▓█▒████████░░█████████▓▓█▓▓███████▒,1
dedicated,1
nMillisecsStrafing,1
\"\iteration\,1
SetFocus(),1
terminating,1
motion,1
abort,1
feel,1
https://github.com/tpecholt/imrad,1
sequence,1
addressed,1
visualization,1
\left,\,1
whoever,1
\"\Frag"\\,1
\"\0.90/-0.90"\\,1
\config.validate(),\,1
sg,1
pktUserCmdMove.m_bCrouch);,1
generalizing,1
sign,1
\started,\,1
(?),1
HORIZONTALLY,1
std::string-compatible,1
fImpactY);,1
explosive,1
ratio,1
map.height);,1
equals,1
(hit,1
takes,1
DeathKillEventLister.cpp,1
TRUE;,1
keypress,1
overriding,1
(m_gui.getPrevMenuState(),1
isExpectingAfterBootUpDelayedUpdate(),1
disconnect(),1
lineHandleLayout(),1
(either,1
\logging,\,1
reverse,1
bGameSessionWon);,1
spaces),1
(int,1
\msg.m_szWpnName,\,1
(proofps_dd::FragTableRow,1
MsgServerInfoFromServer,1
\,\,1
arming,1
clip,1
5:,1
DWORD,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░▓███▒░░░░░░░░░░▒█████████░░░░░░░░▓███▓░░░░░░░░░░░░░░░░▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓████████████████████████████████████▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
(OvCrouchInput),1
https://ascii-generator.site/,1
IP,1
\Name,\,1
\area,\,1
pulling,1
\pktUserCmdMove.m_bShootAction,\,1
Warhouse:,1
treat,1
\"\unused"\,\,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓░░░░░░░░░░░░░░░░░▒▓▒░░░░░░░░░░▓██▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓░░░░░░░░░░░,1
ENDING,1
player.getPos().getNew().getX(),1
May,1
\Strafe"\);\,1
sendToAllClientsExcept(),1
m_sAvailableMapsListForForceSelectComboBox,1
\alphabetic,\,1
mechanism,1
goal/win,1
managing,1
angles,1
lists,1
\initiated,\,1
endif,1
boxes,1
Based,1
unistd.h,1
\unspecified"\\,1
\getConsole().EOLn("\XHair\,1
\config"\\,1
m_gui.getMenuState(),1
\pos,\,1
\j,\,1
annoying,1
EventListerTest.h,1
\idea,\,1
respawns,1
cubes,1
GetSystemMetrics(SM_CXSCREEN);,1
\cubes,\,1
(60,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▒▒▒░░▓▓▓░░▓▓▓░░▓▓▓▒░▒▓▒▒▒░░▓▓▓░░░░░▓▓▓░░▓▓▒▒▓▓▓░▒▓▓▒░▓▓▓░░▓▓▓░▓▓▓░░▓▓▓░░▓▓▓░░▒▓▒▒▒░░▓▓▓░░▓▓▓░░▓▓▓▒░░░░░░░░░░,1
fulfilled,1
\m_gui.textPermanent("\Client,\,1
blocked,1
difficult,1
\died,\,1
penalty,1
\nMillisecsStrafing,\,1
separator,1
drawGameObjectivesServer(),1
isJumping(),1
auto-resize,1
right-side,1
Own,1
std::filesystem::directory_iterator,1
https://github.com/ocornut/imgui/blob/master/docs/FAQ.md,1
TEMPORARILY,1
GAME_JUMP_GRAVITY_START,1
client;,1
multiplication,1
canFall,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░███░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
pge_network::MsgApp::msgId,1
\loading),\,1
nRandom,1
low-height,1
RX,1
learnt,1
Warning:,1
test:,1
wpn->update(),1
weapon-related,1
effects,1
Unfortunately,1
owner:,1
callbacks,1
\throw,\,1
compatible,1
\"\Adam"\\,1
following:,1
ResetGlobalData(),1
CalculateAbsoluteCoordinateY(int,1
highly,1
\m_items,\,1
(this,1
45-50,1
clearer,1
operation:,1
environment,1
logical,1
https://stackoverflow.com/questions/916259/win32-bring-a-window-to-top,1
(player.getWantToStandup()),1
setTimeLimitSecs(),1
ideal,1
sort,1
occuring,1
'\0';,1
205;,1
restartWithoutRemovingPlayers(),1
explanation,1
rectangle,1
policy,1
complex,1
iterator,1
latest,1
proofps_dd::MsgUserSetupFromServer;,1
PFL::getFilename(fname),1
\strafe,\,1
Physics.h,1
Destroying,1
\files,\,1
per-frame,1
timeRemainingUntilRespawnSecs,1
drawGameObjectivesClient(),1
PRooFPS-dd.pch,1
distinguish,1
\respawned!"\,\,1
sent:,1
1-2,1
Control,1
state??,1
pre-generated,1
CalculateAbsoluteCoordinateX/Y(),1
\filled,\,1
getPos().set(),1
\legs,\,1
isDirty(),1
non-linear,1
FIRST,1
unique_ptr,1
dbl,1
ImGuiTableFlags_SizingStretchProp,1
cbDisplayProgressUpdate,1
likely,1
eof,1
\viewport,\,1
CVARS,1
periodic,1
(i++,1
(player,1
v0.1.3,1
std,1
constexpr,1
EventLister.h,1
charge,1
fell,1
forever,1
but:,1
PgeCfgProfiles,1
player.attack(),1
bCurrentClient,1
10);,1
-proofps_dd::Player::fSomersaultGroundImpactForceX,1
\TextColored(),\,1
initiated:,1
\"\1\,1
m_bShootAction,1
fGravity:,1
identify,1
ROUGHLY,1
canTakeItem(),1
HIDE,1
sent),1
Terminate,1
\BVH,\,1
\bullets,\,1
\X-pos,\,1
\ticks,\,1
player.getCrouchInput().getNew(),1
join,1
write,1
gave,1
vars,1
\nJumpCounter,\,1
unload(),1
getClientUpdateRate(),1
\MsgUserSetupFromServer,\,1
Whenever,1
createPlane(),1
...),1
ridiculous,1
by),1
raw,1
possibility,1
nWpnNameNameMaxLength-1,1
Warhouse,1
recognize,1
(map.height,1
\changes,\,1
stretch,1
std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::steady_clock::now(),1
MapcycleTest.h,1
ImGuiTableColumnFlags_WidthFixed,1
\"\frags"\,\,1
\updateOldValues(),\,1
(unlike,1
szCVarSvDmRespawnDelaySecs,1
\attack"\,\,1
(server,1
You,1
continuously,1
insertion,1
legacy,1
application/GUI,1
nNewUnmagCount,1
nUniqueNumberWidthInName,1
VALID,1
\lame,\,1
showed,1
putting,1
m_bCrouchingWasActiveWhenInitiatedJump);,1
\(cam.project3dTo2d(0.f,\,1
one-by-one,1
repeating,1
IPv6,1
supervisioning,1
imagine,1
\valid,\,1
\below,\,1
call(s),1
\serverUpdateBullets(),\,1
per-tick,1
inverse,1
recreated,1
looping,1
problems,1
users;,1
initiates,1
opened,1
\health,\,1
included,1
\"\cannot\,1
###################################,1
x),1
dwData,1
critical,1
\CConsole::getConsoleInstance().SetLoggingState(proofps_dd::Player::getLoggerModuleName(),\,1
rectServerGameWindow.top,1
messages;,1
20.f,1
accessed,1
\loop,\,1
generally,1
Including,1
coords):,1
joining),1
rate-limited,1
nJumpCounter,1
dependers,1
red,1
\Actually,\,1
\respawn"\,\,1
▓████████░░▒▒▒▒▒▓█████████░░░████████▓░▒▒▒▒▒▒█████████▒░░░█▓░█████░░░░░░▓████▒▒█▒░████████░░░░░░▓███████▒░▒████████░░▒▒▒▒▒▒▒▒▒▒░░░▓████████░░▒▒▒▒▒▓█████████░░░░▒██████████▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████████░░░░░░███████▓░▓███████▓░░░░░▓███████▒,1
damage:,1
mix,1
set;,1
PGE::runGame(),1
hell,1
https://raa.is/ImStudio/,1
30,1
private,1
non-negative,1
relying,1
\flag,\,1
\who,\,1
\%b"\,\,1
states,1
conditiona,1
here?,1
\m_vecUnprojected.getX(),\,1
m_audio,1
complicates,1
\initialization,\,1
implementing,1
links:,1
(it,1
fetchConfig():,1
case:,1
details,1
\Yes,\,1
index);,1
\serverPlayerCollisionWithWalls(),\,1
over/into,1
getObject3D();,1
\can,\,1
11000,1
cheating,1
\jumping"\);\,1
startup,1
queued,1
\msg.m_nHealth,\,1
\listboxes,\,1
heartbeats,1
\die,\,1
Evaluates,1
CameraHandling,1
unwanted,1
ends,1
front-/backflip,1
(meaning,1
\VS,\,1
played,1
sendToServer(),1
player.update(),1
MapItem.cpp,1
\buttons,\,1
[Frag,1
Key,1
\perspective,\,1
distributed,1
/*clients*/),1
well:,1
summarizing,1
https://github.com/proof88/PRooFPS-dd/issues/261,1
low-effort,1
https://github.com/proof88/PRooFPS-dd/issues/220,1
0:,1
18,1
refer,1
Until,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓█▓▓██░░░░░░░░░████▓░░░░░░░░░░░░░░░░░▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒███░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
MapItemTest.h,1
handleUserConnected(),1
SharedWithTest.h,1
won;,1
force:,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░▒▒░░░░░░░░░████▓░░░░░░░░░░░░░░░░▒███▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▓████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
\passed,\,1
word,1
Networking,1
3.),1
Which,1
non-continuous,1
vecExpectedForce,1
name),1
resulting,1
cast,1
(unless,1
playerIt->second;,1
\(walls,\,1
itself;,1
hardcoded,1
incoming,1
PlayerHandling.cpp,1
std::unique_ptr;,1
any),1
items),1
positioned,1
map.height),1
smoke,1
░░░░░░░▒▓███████████████████████████████████░▒█░▒███░▓█▒░██████▓░▒▒▒▒▒▒▒▒▒▓████░▒▒▒▒▒▒▒▒██████████▒░████████▓░▓██░░▓██████████▒░███████▒░█████████████░▒████████████░▒█████████████░▒███████████████████████████████████████████████████████████▓▒░░░░░░░░,1
{{NO_DEPENDENCIES}},1
player.getAngleY(),1
m_vecJumpForce.SetZ(getPos().getNew().getZ(),1
Probably,1
mouse_event(MOUSEEVENTF_MOVE,1
Explosion.h,1
PRooFPSddPGE.h,1
alive,1
PFL,1
void,1
v0.2.0.0,1
Cpp17,1
multipliers,1
form,1
Epoch,1
GAME,1
delivered,1
vecProjected,1
Resets,1
party,1
originally,1
maintained,1
easiest,1
cvar.getLongHint()),1
ah,1
\seconds,\,1
\(default),\,1
parts,1
edges/corners,1
(the,1
compare,1
\exact,\,1
subtle,1
(ImVec2),1
way;,1
DLL_THREAD_ATTACH:,1
Multiplayer,1
\injected,\,1
░░░░░░░░░███▓░░▓██▓░░░░░░░░░░░░▒▓█████████████████████████░▓███▓██████████▓████░▒▒▒▒▒▒▒░█████░░▓████████████▓░▒░▒█████████████▒░███████▒░██████████▓░▒██░░██████████░▒█████████████░▒█████████████████████████████████████████████████▒░░░░░░░░░░░░░░░░░░░,1
\MaxFPS,\,1
resizing,1
\themself,\,1
stretched,1
getPos().getOld().getY());,1
ahead,1
format,1
committed,1
WinSDKVer.h,1
Using,1
\(!gameMode.renamePlayer(playerIt->second.getName(),\,1
contiguous,1
grey,1
Item,1
there;,1
mean),1
maps.load(),1
\could,\,1
START,1
tie,1
player.getTimeLastSetWillJump()).count());,1
cvars,1
statistics,1
stubbed,1
restarted,1
░░▒██████████████████████████████████████████▓░██████░░▓████████▓▓▓▒▒▓▓▓▓▓█████░▒▒▒▒▒▒▒▒███▓░▒███▓░▒████████▓░▓████▓░░████████▒░███████▒░█████████████▒▓████████████▒▒▒▒▒▒▓████████▓▓▓▓▓▓▓███████████████████████████████████████████████████████████▓░░░░,1
wpn's,1
(getResetTime()),1
GUI.cpp,1
\crouch"\,\,1
Renames,1
exits,1
serverUpdateRespawnTimers(),1
telete,1
(nPhysicsIterationsPerTick),1
\CConsole::getConsoleInstance().EOLn("\\,1
Constants,1
objXHair,1
\RegTestBasicServerClient2Players(20,\,1
2d,1
enum,1
\happened,\,1
\faster,\,1
▓████████░░░░░░░░░░░░░░░░░░░░████████▓░░░░░░░░█████████░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒▒░▒▒▒▒░░░░░░░░▓████████░░░░░░░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░░██████████▓▒░░░▒▓▓█████████░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▓▓▒▒▒░░▒▒▒▒▒▒▒▒░░░░░▒▒▓▓▓▓▒▒░░▒▒▒▒▒▒▒▒░,1
\hide(),\,1
force-create,1
error-prone,1
\these,\,1
getDearImGui2DposXFromPure2DposX(),1
(actually,1
stable,1
(natural):,1
stdafx.obj,1
\cells,\,1
located,1
rx,1
mouse_event(,1
SoLoud,1
iActiveItemMapcycle);,1
recommend,1
216,1
pushing,1
alphabetic,1
disconnects,1
Config.cpp,1
dedicated-,1
V-Sync,1
░░░░░░░░░░░░░░░░░▒▓▓██████████████████████▓░████▓░░▒████▓░▓████▒▓▓▓▓▓▓▓▓▓▓▒████░▒▒▒▒▒▒▒▒████████▒░▒█████████▓░░░▓█████████████▒░▒▓▒▒▒▒▒░░████████████▓░▒████████████░▒█████████████░▒██████████████████████████████████████████████████████▒░░░░░░░░░░░░░░,1
\rendered,\,1
https://github.com/proof88/PRooFPS-dd/issues/323,1
mapFilename,1
90%,1
activating,1
delivering,1
unprojected,1
2.),1
#include,1
underlying,1
stdafx.cpp,1
!!!BADDESIGN!!,1
m_availableMaps.erase(m_availableMaps.begin(),1
way:,1
y:,1
&(*it);,1
\fall"\\,1
presses,1
buttons,1
bSendUserUpdates,1
\strafes"\,\,1
resizing),1
dangerous,1
obtain,1
m_gui.textPermanent(),1
(Player::szCVarSvSomersaultMidAirAutoCrouch),1
virtually,1
m_sAvailableMapsListForMapcycleListBox,1
23000,1
illegal,1
WeaponProxy,1
\pistol,\,1
expectedPktStatsServerClUpdateRate60,1
anything;,1
nMillisecsJumpDuration,1
valid:,1
\"\re-"\spawn,\,1
quick,1
SetFocus(hTargetWindow)),1
\MsgUserConnected,\,1
ground),1
server:,1
PRooFPS-dd-Tests.cpp,1
\needed,\,1
msg.m_nKillerConnHandleServerSide);,1
playerIt,1
raise,1
\setX(),\,1
\available!"\,\,1
exiting,1
PRooFPSddPGE.cpp,1
debugging,1
filed,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██░▓██░███░░███░▒██▓░▓██▒▓██░███▒░░░▓██░░░▒▓▓▒███░▓██▒░███░░███░███░░███░░███░███░▓██▒███░░███░▓██▒░░░░░░░░░░░,1
side-effects,1
persistent,1
KNOW,1
allows,1
GetSystemMetrics(SM_CYSCREEN);,1
mismatching,1
Goal,1
static_cast<int>(std::lroundf(fRadiusDamage)));,1
manipulating,1
Explosion.cpp,1
\Z-fighting,\,1
referenc,1
dist.:,1
copy-paste,1
Stepping,1
\shoot,\,1
lineHandleLayout():,1
emptiness,1
vsync,1
MsgCurrentWpnUpdateFromServer;,1
\countdown,\,1
GameMode's,1
\disconnect,\,1
Health,1
together,1
Start,1
\hidden,\,1
\getConsole().SetLoggingState(sTrimmedLine.c_str(),\,1
X-forces,1
\gravity,\,1
logically,1
\count,\,1
mid-air),1
GameMode-specific,1
programmatically,1
freely,1
shouldSend(),1
DebugTest_PRooFPS-dd,1
\(getNetwork.Update()),\,1
(hDialogWndServerOrClient,1
oldhealth,1
\floor,\,1
3-digit,1
\1.0f),\,1
\ImGui::TextColored(ImVec4(0.0f,\,1
similar,1
typed,1
emit,1
simpler,1
drawSettingsMenu,1
\startBlinking,\,1
░░░░░░░░░▒░░░▒▓▓▒░░▒█▓░░░░░▓███▒░░▒▒░░░░░░░░░▒▒▒▓███░░░░░░░░▓███▓░░░░░░░░░░░░░░░░▓░░░▓░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░▒▓▓▓▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████████████████████████████████████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
sorted;,1
StyleColor,1
RadioButton,1
elems,1
░░░░░░████▒░░████░░██░░░░░░▓████▓▓▒░░░░░░░██░░░░▓█▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒░░▒▓███████████████████████▓▓▓▓▓▓▓███████████████████████▓░░░░░░░░░▒▒▓▓▓▓▓▓▓█████████████████████████████████████████████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
pge_network::MsgUserConnectedServerSelf,1
2+4,1
My,1
clientUpdateTimeRemainingSecs(),1
\rate-limiting,\,1
size(),1
<=,1
MOUSEEVENTF_MOVE,1
m_mapPlayers.find(connHandleServerSide)),1
wpns,1
\cheating,\,1
snippet,1
according,1
nJumpCounter++;,1
(ImGui::IsItemHovered()),1
300),1
ceiling,1
keys,1
\unfortunately,\,1
initializing,1
drawCreateGameMenu,1
die(),1
std::string(szNewUserName),1
\state,\,1
handleBulletUpdateFromServer,1
\framerate,\,1
@,1
nRespawnTimeSecs,1
'itFound',1
10.f,1
\entity,\,1
empties,1
\hModule,\,1
override,1
Maps::inititalize(),1
SendUserUpdates(),1
\page,\,1
\corners,\,1
getTimeDied(),1
occurrences,1
show/hide,1
0.f;,1
often,1
shaking,1
sharper,1
\availableMapsNoChangingGet(),\,1
▓████████░░░░░░░░░░░░░░░░░░░░████████▓░░░░░░░░▓████████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓████████░░░░░░░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░░░░░▒▓███████▒░▒███████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
non-zero,1
https://github.com/ocornut/imgui/wiki/Useful-Extensions,1
tick/physics_min_rate,1
non-reloadable,1
vector's,1
axis),1
manager,1
thru,1
\getConsole().EOLn("\x\,1
false);,1
\Success,\,1
optimization,1
invul:,1
4.f,1
crouchInput:,1
winsock2.h,1
PROCESS_INFORMATION,1
CalculateAbsoluteCoordinateX(int,1
stuck,1
converter,1
\pktUserCmdMove.m_strafe,\,1
CLIENT,1
physics-related,1
factor,1
\method,\,1
(goal,1
\getConsole().EOLn("\DeathMatchMode::%s():\,1
Physics:,1
Coordinate,1
Maps.h,1
\ready,\,1
bound,1
Once,1
Wait,1
players',1
18.f,1
fileEntry.path().filename().string().c_str());,1
m_mapPlayers.end()),1
m_maps.fMapBlockSizeWidth],1
\fImpactX,\,1
kicking,1
mass,1
(we,1
\packets,\,1
setY(),1
far,1
UNLOAD,1
corners,1
defines,1
strafe-jump-induced,1
lot,1
\traditionally,\,1
--------->|,1
pge_network::MsgUserConnectedServerSelf;,1
handleWeaponBulletCountsChangeShared();,1
\*/,\,1
magnitude,1
\filename,\,1
identical,1
operation,1
'\n',1
PureVector::Set(),1
i++),1
exists,1
\sorted,\,1
cmdMove,1
threshold,1
Fixed/Stretch,1
UserNameChangeAndBootupDone,1
\there,\,1
color,1
serverHandleUserCmdMoveFromClient(),1
SetActiveWindow(hTargetWindow)),1
\getConsole().EOLn("\Maps::%s():\,1
nContinuousStrafeCountForDebugServerPlayerMovement);,1
location,1
inserted,1
maximize,1
\diameter,\,1
Copied,1
asks,1
\'?',\,1
splash,1
walls/boxes,1
injecting,1
\0.f,\,1
\bAreWeTestingReleaseBuild,\,1
appends,1
\owner,\,1
CalculateAbsoluteCoordinateY(rectServerGameWindow.top,1
map.width,1
proofps_dd::Config&,1
anyway;,1
0.1,1
STDAFX.H,1
stopBlinking(),1
measure,1
coming,1
\nDeaths,\,1
\ceiling)"\);\,1
(map,1
Physics.cpp,1
\XHair,\,1
jumping:,1
perfect,1
Good,1
\smarter,\,1
show(),1
\ESCAPE,\,1
generalized,1
responded,1
subject,1
proposed,1
anti-aliasing,1
account,1
lpReserved,1
#,1
considered,1
IF,1
wpn->getState().getNew());,1
\other,\,1
\event,\,1
analysis,1
https://github.com/iamclint/ImGuiDesigner,1
accumulating,1
static_cast<PGE&>(*this),1
jumpforce,1
things:,1
\everyone,\,1
force),1
clears,1
\them,\,1
\"\,\,1
\done"\\,1
cycles,1
(map.width,1
GameModeTest.h,1
Config.h,1
nRemMillisecs,1
entity's,1
ONLY,1
elapsing,1
\view,\,1
Owner,1
add/updatePlayer(),1
associated,1
enter,1
▓████████░▒██████████▓▒░░░░░░████████▓░█████████████▓░░░░░█▓▒█████░░▓▓▒░▓████▓▒█▒▒████████░░░░░░▓███████▒░▒████████░▒██████████▒░░▓████████░▓██████████▓▓░░░░░░░░░░░░▒▓████████████▓▒░░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░████████░░░░░░████████░▓███████▓░░░░░▓███████▒,1
\walls,\,1
(y,1
others,1
msg.m_fPlayerAngleY;,1
timeRemainingSecs,1
to:,1
(player.getHealth(),1
\Z-axis,\,1
Z-axis,1
\"\const\,1
FovX,1
fStrafeDistance,1
air:,1
preset,1
clients:,1
CPlayer,1
Other,1
PlayerHandling.h,1
horrible,1
]Table:,1
player:,1
bitmaps,1
appropriate,1
definitions,1
False,1
idea:,1
Might,1
Project):,1
cases:,1
itemrect,1
produces,1
player.getPos().getOld();,1
multi-element,1
player.getHealth().getOld());,1
bugs,1
\methods,\,1
Create,1
MsgUserUpdateFromServer;,1
\previously,\,1
BulletId,1
forward/up,1
At,1
trick,1
respawn-invulnerability,1
supervising,1
\inversion,\,1
2:,1
\platform,\,1
\start"\);\,1
getGuiInstance(),1
concerns,1
▓████████░░░░░░░░░░░░░░░░░░░░████████▓░░░░░░░░█████████░░░░░▒███▓▓▓▓▓▓▓▓▓▓███▓░░░░░░▓███████▓▒███████▓░░░░▓████████░░░░░░░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░▓████████▒░░░░░░░░░▒████████▒░░░░░░░░░░░░░░░░░░░▓███████████▒████████░░░███████████▓▓███████▒,1
\mspaint),\,1
Handles,1
removes,1
getSizeVec().getX(),1
tx,1
mousewheel,1
(x,1
running,1
From,1
WeaponHandling.cpp,1
\"\The\,1
PureVector(player.getPos().getNew()).setY(obj->getPosVec().getY(),1
denied,1
bAreWeTestingReleaseBuild,1
\mpy,\,1
((m_gui.getMenuState(),1
timeStart;,1
std::vector,1
\update"\);\,1
nMouseWheelChange);,1
completely,1
pulled,1
meaning,1
\v0.1.6.1,\,1
timesteps,1
setFragLimit(),1
\cancel,\,1
\case),\,1
fAlignCloseToWall),1
TextUnformatted(),1
simple,1
inaccessible,1
ImGuiTableFlags_Borders,1
https://github.com/Code-Building/ImGuiBuilder,1
empty);,1
flagsDrawListOriginal;,1
processMessages(),1
(ul_reason_for_call),1
\interleaved,\,1
game's,1
_neighbor_,1
\server-side,\,1
\(!gameMode.renamePlayer(playerIt->second.getName().c_str(),\,1
playerIt->second.getName(),1
feature:,1
inc,1
\available,\,1
\pWpnBecomingAvailable->getMagBulletCount(),\,1
process.h,1
overlapping,1
m_gameMode,1
frequently,1
\msecs,\,1
SetActiveWindow(hDialogWndFullscreen);,1
proofps_dd::Player::fSomersaultGroundImpactForceX,1
\wpn->getState().getOld(),\,1
\together,\,1
responsibility,1
presented,1
▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░░▓▓▓▓▓▓▓▓▓░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░▒▓▓▓▓▓▓▓▓░▒▓▓▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░░▒▓▓▓▓▓▓▓▓▓▓▓▒░▒▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒░░░▓▓▓▓▓▓▓▒░░░░░░▒▒▒▒▒▒░░░▓▓▓▓▓▓▓▓░,1
MsgUserNameChangeAndBootupDone(400)-->|,1
SetActiveWindow(),1
ways,1
break;,1
pointing,1
key.second.c_str());,1
prior,1
\corner,\,1
........,1
Logos,1
updates;,1
listen,1
Yes,1
cheat,1
Z-fighting,1
subtract,1
continue,1
Must,1
\"\#\,1
subtracting,1
\works,\,1
Reason:,1
update;,1
removing:,1
rule,1
PURE_ONE_MINUS_SRC_ALPHA),1
(m_mapPlayers.end(),1
listing,1
timeStart,1
Horizontal,1
DeathKillEventLister,1
a.k.a,1
Can,1
congestion,1
effectively,1
movements,1
quite,1
▓████████░░░░░░░░░░░░░░░░░░░░████████▓░░░░░░░░█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓████████░░░░░░░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░░░▓██████████▒░▒███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
verification,1
https://github.com/proof88/PRooFPS-dd/issues/265,1
point:,1
salto/somersault,1
▓████████░▒█████████████▓░░░░████████▓░█████████████▓▒░░░░▒▒░▒▒▒▒▒░░▓▓░░▒▒▒▒▒░░▒░░████████░░░░░░▓███████▒░▒████████░▒██████████▒░░▓████████░▓█████████████▓░░░░░░░▒▓███████████▓▒░░░░░░░░░▓███████████████░░████████░░░░░░███████▓░▓███████▓░░░░░▓███████▒,1
Weapons,1
XHair.cpp,1
now:,1
m_nPlayerRespawnDelaySecs,1
\ImGui::SetTooltip("\%s"\,\,1
future:,1
ammo,1
model,1
Colliding(),1
object's,1
wouldnt,1
RegTestBasicServerClient2Players.h,1
proofps_dd::GUI::MenuState::None)),1
contantly,1
getBullets(),1
\m_height,\,1
RegTestMapChangeServerClient3Players.h,1
happen;,1
Another,1
per-bullet,1
caution,1
PURE_ONE),1
\connhandle,\,1
SDK:,1
\copied,\,1
described,1
\queue,\,1
List,1
must-have,1
\useful,\,1
reset(),1
(I,1
v0.2.4,1
m_cfgProfiles,1
fPlayerPosXStarted;,1
arpa/inet.h,1
compile,1
Originating,1
resolution,1
PR00FPS-dd,1
MsgUserConnectedServerSelf(400),1
<unistd.h>,1
recent,1
shrinked,1
appended,1
\std::max(0,\,1
occured,1
\"\jump"\\,1
\end(),\,1
serious,1
isSomersaulting(),1
\m_blocks_h,\,1
.cpp,1
\overlapping,\,1
\units,\,1
implementation,1
fatal,1
TRY,1
\"\bootup\,1
outside,1
\delayed,\,1
20),1
doCrouchServer(),1
\confirmed,\,1
\increasing,\,1
player.updateOldValues(),1
window's,1
\interface,\,1
(connection,1
vecProjected)),1
DeathKillEventLister.h,1
▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░▓▓▓▓▓▓▓▓▓░▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓░▒▓▓▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓░▒▓▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░▒▓▓▓▓▓▓▓▓▓▒░▒▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓░,1
\"\yes"\\,1
(absolute,1
matrix[i][j],1
eased,1
MsgCurrentWpnUpdateFromServer(100)--->|,1
\goal,\,1
edits,1
col0,1
Player&,1
Colliding_NoZ(),1
LEFT,1
Microsoft,1
\in,\,1
somewhat,1
[],1
proofpsAppMsgId);,1
\animation,\,1
dies,1
GameInfoPage,1
torn,1
expensive,1
bug,1
delaying,1
counts,1
m_foregroundBlocks_h,1
TX,1
dropped,1
force-inserting,1
\committed,\,1
\depth,\,1
+1,1
Here,1
\sets,\,1
\created,\,1
reduce,1
IP:,1
teleport,1
\early,\,1
length,1
bRequestReload,1
m_vecJumpForce.getX());,1
\"\relative\,1
PR00F88,1
tests.push_back(std::unique_ptr<UnitTest>(,1
tunnel),1
\packet,\,1
requests,1
synchronized,1
development,1
perspective,1
Fixed/Auto,1
\"\NOT\,1
drawJoinGameMenu,1
Info:,1
\thing,\,1
\/*iterations*/,\,1
cheap,1
\overlapping),\,1
\function,\,1
No,1
proofps_dd::GUI::MenuState::None),1
80.f,1
^,1
handleDeathNotificationFromServer(),1
\1080p,\,1
\shown,\,1
m_gui.getMinimap()->show();,1
(Free,1
YPPos,1
Player.cpp,1
65535,1
std::chrono::steady_clock::now();,1
waste,1
fragcount,1
\cb,\,1
Why,1
\Connected,\,1
pickupable,1
Imagine,1
normalized,1
(partially,1
everybody,1
closes,1
{100},1
not:,1
newer,1
\states,\,1
WA:,1
notifying,1
conclusions:,1
decreases,1
worth,1
m_bAllowStrafeMidAir,1
armor,1
none,1
(m_nServerSideConnectionHandle,1
filled,1
walls,1
\MsgUserSetup,\,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓████▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
C,1
nPhysicsRate,1
two,1
sense,1
(sHint.empty()),1
killing,1
https://github.com/pthom/imgui_bundle/,1
column-to-column,1
m_bCrouchingStateCurrent,1
\error."\\,1
\list!"\,\,1
automatic,1
entries,1
\those,\,1
\sent,\,1
aware,1
support:,1
\validity,\,1
(invalid),1
\65,535\,1
recording,1
Return,1
\minPhysicsRate,\,1
on-disk,1
\sNewName,\,1
\updateXHair(),\,1
\m_width,\,1
optimization:,1
report,1
\pitch/yaw,\,1
\3D,\,1
true;,1
closing,1
\dependency,\,1
getMinimap...(),1
construction,1
(ServerStub,1
\validate(),\,1
clean,1
itself),1
146,1
wpnHandling,1
Scaling,1
retrieve,1
numbers,1
breakpoint,1
hCurWnd,1
respawn(),1
after:,1
\ctors,\,1
PgeGnsServer's,1
trouble,1
10,1
100%,1
FFA,1
disconnecting:,1
https://github.com/pthom/hello_imgui,1
Available:,1
trim,1
switches,1
\Physics::serverGravity(),\,1
works,1
bigger,1
CONTROL,1
relies,1
EVERYTHING,1
manual:,1
periodically,1
proofps_dd::MsgCurrentWpnUpdateFromServer::id),1
\HandlePlayerDied(),\,1
noting,1
InputSim.h,1
\(MsgUserConnected,\,1
fDistance,1
allowed:,1
load(),1
\over,\,1
MapItems,1
fFps,1
listen-,1
distribution,1
compilation,1
information,1
returning,1
\(65535,65535)\,1
occur:,1
availableMaps,1
timeStrafeStarted,1
\getConsole().EOLn("\%s()\,1
player.isNetDirty(),1
Mixed,1
\createAndGet(),\,1
░░▒██████████████████████████████████████████████████████████████████████████████▓▓▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▒,1
always-existing,1
Initializing,1
END,1
happen:,1
Player's,1
finished,1
\expires,\,1
\sClientUserName.c_str(),\,1
\ul_reason_for_call,\,1
\center,\,1
m_vecUnprojected,1
evaluateInstance(),1
bMe,1
\handleUserSetupFromServer(),\,1
drawGameObjectives(),1
stepping,1
init,1
enables,1
\soon,\,1
3rd,1
_WIN32_WINNT,1
Server-side,1
\v0.1.6,\,1
UpdateVisibilitiesForRenderer(),1
alter,1
(hDialogWndFullscreen,1
\jump-up,\,1
repositioning,1
first),1
difficulties,1
suicides,1
edges,1
Visual,1
Salto/somersault,1
\unit,\,1
▓████████░░░░░░░░░░░░░░░░░░░░████████▓░░░░░░░░█████████░░░██░█████▓▒▒▒▒▓█████░██▒░████████▒░░░░▒████████░░▓████████░░░░░░░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓██████████▒░░░░░░░░░░░░░░░░░░░████████░░░░░░████████░▒████████░░░░░▓███████▒,1
calculation,1
NEW,1
\starts,\,1
\Originally,\,1
\listening,\,1
processed:,1
nOldUnmagCount,1
m_items,1
Now,1
v0.1.5,1
profile,1
▓████████░░░░░░░░▒████████▓░░████████▓░░░░░░░░▓████████░░░█▓░█████░░░░░░▓████▒▓█▒░████████░░░░░░▓███████▒░▒████████░░░░░░░░░░░░░░░▓████████░░░░░░░░▒████████▒░░▓███████▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████████▒░░░░░███████▓░▒███████▓░░░░░▓███████▒,1
off:,1
generating,1
\1!"\,\,1
\items,\,1
getServer(),1
introduces,1
Task:,1
append,1
\getConsole().EOLn("\Expired,\,1
received/sent,1
filenames,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▒▓▒░░▓▓▓▒▒▓▓▒░▓██▓▒░▒▓▒▓▓░░▓▓▓▒▒▒▒███▓░░▒▒▒▒▓▓▒░▓██▒░▓▓▓▒▓▓▓▒░▓▓▓▒▒▓▓▒▒▒▓▓▒░░▒▓▒▓▒░░▓▓▓▒▓▓▓▒░███▓▒░░░░░░░░░░,1
\delay,\,1
evenly,1
Strafe.cpp,1
rocketl_xpl.obj,1
represent,1
ended,1
allready,1
\added,\,1
growth,1
bug:,1
Editors:,1
1/3,1
AGAIN,1
online,1
\front,\,1
DLL_THREAD_DETACH:,1
\m_maps.fMapBlockSizeWidth,\,1
DEFAULT,1
bottom-right,1
Filename,1
m_nTimeRemainingMillisecs,1
internal,1
picking,1
fCamPosOffsetX,1
monitoring,1
setup,1
PRooFPSddPGE::updateFramesPerSecond(),1
\magnitude,\,1
pge_network::PgePacket::getServerSideConnectionHandle(pkt)),1
ExpectedPktStatsRanges,1
patient,1
dumping,1
assumption,1
\msg.m_szWpnCurrentName,\,1
InputHandling.cpp,1
MapsTest.h,1
\networking,\,1
\row-by-row,\,1
\sounds,\,1
player.getPos().getNew().getX();,1
mapItem.Take(),1
fictive,1
3-param,1
formula,1
gets,1
AndBootupDone(400),1
\humans,\,1
READY,1
validateConfig(),1
\m_gui.textPermanent("\Server,\,1
\list,\,1
\vecExpectedStrings[iVec].c_str(),\,1
\anytime,\,1
reloads,1
rolling,1
mixed,1
gui,1
\show,\,1
\deleted,\,1
isKeyPressed(),1
respective,1
Maps.cpp,1
specify,1
Close,1
(!bServer),1
(const,1
settling,1
relayed,1
Mapcycle.cpp,1
subsystems,1
\moment,\,1
iterated,1
\meantime,\,1
PgePktUserConnected,1
hierarchical,1
[-m_maps.width(),1
Weapon-related,1
▓▓▓▓▓▓▓▓▓░░░░░░░▒▓▓▓▓▓▓▓▓▓▒░░▓▓▓▓▓▓▓▓▓░░░░░░░▓▓▓▓▓▓▓▓▓▓░░░░▒▓▓▓▒▒▒▒▒▒░▒▒▒▒▒▓▓▓▒░░░░▒▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▒░░░▒▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓░░░░░░░▒▓▓▓▓▓▓▓▓▓▒░▓▓▓▓▓▓▓▓▓░░░░░░░░▒▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒,1
▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒░░░░░░░░░░░▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░▒▒▒▒▒▒░░▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒░,1
disabling/enabling,1
comboForceMapStart,1
Useful,1
fine-grade,1
\m_gui.textForNextFrame("\ASDASDASDASDASDASDASDASDASDASDASDASDASDASDASDASDASDASDASDASD"\,\,1
iActiveItemMapsAvailable);,1
highest,1
\m_pObjXHair->getPosVec().getY(),\,1
PRooFPS-dd.rc,1
Continuous,1
\restartWithoutRemovingPlayers(),\,1
locations,1
Frag,1
new:,1
\CConsole::getConsoleInstance().EOLn("\"\);\,1
Milliseconds,1
upper-left,1
Networking.h,1
\Joe,\,1
Hint:,1
untaken,1
1024x768,1
certain,1
by:,1
strafe:,1
UPDATED,1
\active,\,1
y),1
msg.m_pos.x);,1
forever-invulnerable,1
whose,1
non-existing,1
Strafe::NONE),1
Basically,1
straightforward,1
modified:,1
servers,1
\accepted!"\,\,1
\player.getHealth(),\,1
\tickrate,\,1
20;,1
5,1
keyboard,1
zeros,1
serverCheckAndUpdateWinningConditions();,1
\millisecs"\,\,1
proactively,1
fixing,1
Considering,1
bored,1
\columns,\,1
\etc.),\,1
mousewheel:,1
@TICKRATE,1
PgeServer::Update(),1
BOOL,1
paragraph,1
loads,1
anomalies,1
lerp,1
\m_foregroundBlocks_h,\,1
disallowed,1
rotation,1
\earlier,\,1
keybdRelease,1
reply,1
\lower,\,1
all),1
Deaths,1
non-explosive,1
useful,1
RECTs,1
constant/even,1
std::chrono::duration_cast<std::chrono::milliseconds>(timeStart,1
(bitmaps,1
SharedWithTest.cpp,1
(game),1
allocation,1
identifies,1
mouse_event(),1
\3,\,1
PRooFPS-dd.cpp,1
MapTestsCommon.h,1
\nRandom,\,1
\handleDeathNotificationFromServer(),\,1
▓████████░░▒▒▒▒▒▒░░░░░░░░░░░░████████▓░▒▒▒▒▒▓█████████▒░░░█▓▒█████▓▓▒▒▒▓█████▓▒█▒▒████████░░░░░░▓███████▒░▓████████░░░░░░░░░░░░░░░▓████████░░▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░▒████████████▓░░░░░░░░░░░░░░░░░░░░░████████░░░░░░████████░▓███████▓░░░░░▓███████▒,1
mixing,1
fStrafeDistance);,1
matching,1
cos(),1
\modifiable,\,1
\MapItem,\,1
\update,\,1
ensuring,1
value-returning,1
▓▓▓▓▓▓▓▓▓░░░░░░░░▒▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓░░░░░░░░▓▓▓▓▓▓▓▓▓░░░▓▓▓▒▒▓▓▓▓▓▒▒▓▓▓▓▓▒▒▒▓▓░░▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓░░▒▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓░░░░░░░░▒▓▓▓▓▓▓▓▓▓░▓▓▓▓▓▓▓▓█░░░░░░░░░▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒,1
strictly,1
Ctrl+F,1
update:,1
rate-limiting,1
\updated,\,1
recently,1
https://github.com/Half-People/HImGuiEditor/tree/main,1
bValidConnection,1
necessarily,1
\player.getGravity(),\,1
validations,1
blurry,1
fPureX,1
\crouch,\,1
\forever,\,1
\direction,\,1
trimmed:,1
\m_pObjXHair->getPosVec().getX(),\,1
always-connected,1
RIGHT-NONE-RIGHT,1
\WON,\,1
dry,1
0.96f,1
cvar.getShortHint(),1
Durations.h,1
See,1
decremented,1
\wall"\);\,1
shown,1
roll,1
PgeGnsClient::m_hConnectionServerSide,1
\player.getName().c_str(),\,1
technique,1
successful,1
inputs,1
\drawXHairHoverText(),\,1
iElem);,1
Empty,1
comparing,1
\std::unordered_multiset,\,1
simulatenously,1
mouseScroll,1
TableHeader(),1
project2dTo3d(),1
limited,1
\mpx,\,1
154,1
2.f,1
hides,1
bGameSessionWon,1
\gun,\,1
supported,1
wide,1
playerConst.getInvulnerability());,1
specifies,1
position),1
\//getConsole().EOLn("\Got\,1
after-blinking,1
authorative,1
\FovY,\,1
WeaponClient,1
Earliest,1
player.getPos().getY(),1
GAME_PLAYERS_POS_Z,1
\1"\,\,1
180.f,1
m_vecJumpForce.SetY(getPos().getNew().getY(),1
per-axis,1
chrono,1
garbage,1
sNewName,1
Sticking,1
\disconnected,\,1
faster:,1
\work,\,1
vecProjected;,1
dead:,1
playerIt->second.getIpAddress(),1
answering,1
chars,1
pushed,1
top-left,1
Precompiled,1
reasons:,1
\true!"\,\,1
\milliseconds,\,1
createExplosionServer(),1
client:,1
SetCursorPos(rectServerGameWindow.right,1
░░░░░░░░▓████░▒████░░░░░░░░▒▓▒▒░░░░░░░░░▒▒█████████████████████████████████████░▒▒▒▒▒▒▒░████░░██████████████▓░▓█░░▓███████████▒░███████▒░█████████▓░▒████░░█████████░▒█████████████░▒██████████████████████████████████████████▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░,1
unprojecting,1
functionalities,1
GUI::drawMainMenuCb(),1
\item,\,1
other.m_cfgProfiles;,1
(playerIt,1
since:,1
consider,1
Shooting,1
aligned,1
Z-coords,1
decrement,1
GAME_FALL_GRAVITY_MIN,1
(caused,1
mapcycle-available,1
Instead,1
\trigger!"\,\,1
unloaded,1
anytime,1
switched,1
\end"\);\,1
m_mapClients,1
necessary,1
\vecProjected.getX(),\,1
handleWeaponStateChangeShared(),1
officially,1
axis,1
mainLoopConnectedServerOnlyOneTick(),1
resets,1
\checker,\,1
\steps,\,1
timeStrafeStarted).count());,1
\iGameModeType,\,1
accept,1
online:,1
dynamically,1
graphical,1
░░░░▓████████████████████████████████████████░░▒████▓░▒░███████▓▒▒▒▒▒▒▒▒▒▒▓████░▒▒▒▒▒▒▒▒███▒▒█████▒░████████▓░▓███▒░▒█████████▒░███████▒░█████████████░▒████████████░▒█████████████░▒▓▓▓▓▓█████████████████████████████████████████████████████████▒░░░░░░,1
Currently,1
Finally,1
non-dry-run,1
Mapcycle.h,1
Typical,1
overlap,1
mpy,1
player.getPos().getNew(),1
Z-ordering,1
\vecProjected.getY(),\,1
fetched,1
in:,1
overdrawing,1
\m_fSomersaultAngle,\,1
repositioned,1
map_.txt,1
\ridiculous,\,1
1.),1
100);,1
APIENTRY,1
\non-dry-run,\,1
FIFO,1
Renders,1
attack(),1
variables:,1
\"\If\,1
Strafe.h,1
LEFT-NONE-LEFT,1
sphere,1
\Mapcycle,\,1
proofps_dd::GameMode,1
Secondary,1
\%b,\,1
evaluatePktStatsServer,1
SetActiveWindow(hDialogWndServerOrClient);,1
decouple,1
BringWindowToFront(),1
\blocking,\,1
Similar,1
#################################,1
\less,\,1
));,1
host,1
https://pthom.github.io/imgui_manual_online/manual/imgui_manual.html,1
m_pConfig->validate();,1
\unproject,\,1
be:,1
various,1
\"\map_warena.txt"\,\,1
waiting,1
preallocate,1
dry-run,1
Durations,1
\debug,\,1
\swap(),\,1
*m_obj;,1
naturally:,1
counting,1
\connect,\,1
proofps_dd::MapItem::getObject3D(),1
updateXHair(),1
destroying,1
sMapName,1
https://stackoverflow.com/questions/42531/how-do-i-call-createprocess-in-c-to-launch-a-windows-executable,1
items_separated_by_zeros,1
timeStrafeStarted;,1
Flash),1
old:,1
-------->|,1
768,1
bullets_default,1
fRadiusDamage,1
░░▓███████████████████████████████████████████████████▓████████████████████████░▒▒▒▒▒▒▒░█████▒░░░░▓██████████▓███████▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▓░░,1
DLL_PROCESS_DETACH:,1
MsgWpnUpdateFromServer,1
Platformer,1
\getConsole().EOLn("\Tick\,1
Logo,1
divide,1
RunTime,1
clientUpdateBullets(),1
CreateProcess,1
\handling,\,1
Object3DManager,1
\specified,\,1
\90.f,\,1
\onGameInitialized(),\,1
fCamPosOffsetY,1
\gradually,\,1
DO,1
Btw,1
bazooka,1
\up"\,\,1
\ms,\,1
\restart,\,1
duplicate/redundant,1
bOriginalExpectingStartPos,1
Inj'd,1
followed,1
normal,1
initPkt(),1
Name,1
reflecting,1
TESTING,1
\switch,\,1
░░░░░░░▓███▓████████░░░░░░░▓███▒░░░░▒░░░░░░░░░░░░░░░░░▒▓███████████████████████▒▓▓▓▓▓▓▓▒████▒░▓██▓░░████████▓░▓████▒░▒████████▓▒████████▓████████████████████████████████████████████████████████████████████████████████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
asd,1
getPure().WriteList();,1
v0.2.2.0,1
\it!"\,\,1
'text',1
1-line,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓██▓▓░░░░░░▓███▓▓▓▒▒░░░░░░░░░▓███▓░░░░░░░░░░░░░░░░▓███▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▓█████████████▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
deletes,1
\estimation,\,1
itTargetWpn->second.c_str());,1
vecOriginalJumpForce,1
precisely,1
\"\fixed"\\,1
registered,1
\down,\,1
misleading,1
causes,1
redundant:,1
cache,1
\Maps,\,1
(keep,1
text.c_str());,1
command,1
patience,1
preferred,1
fitting,1
m_players,1
Connecting,1
vector-scalar,1
bJumpInduced,1
\object,\,1
miss,1
surface,1
\ImGuiTableColumnFlags_WidthFixed,\,1
available:,1
tooltip,1
FragTableRow,1
passed,1
unforeseen,1
Remaining,1
\trivial,\,1
\vec,\,1
sInitialName,1
pge_network::ServerConnHandle,1
highlighted,1
BIG,1
puts,1
static_cast<int>(m_pConfig->getPlayerRespawnDelaySeconds()),1
increasing,1
(nTimeLimitSecs-2),1
\0!"\,\,1
too:,1
direct,1
especially,1
HMODULE,1
\behavior,\,1
picks,1
imgui.h:,1
m_timeFullRoundtripStart,1
in-game),1
clones,1
kills,1
continuity,1
operator=,1
plane,1
m_mapPlayers[connHandle],1
iPhyIter,1
increase,1
option,1
timeDiffSeconds);,1
jump:,1
205,1
\backward,\,1
regularly,1
closest,1
user's,1
count:,1
Rx'd,1
\as_const(),\,1
szNewUserName)),1
\RegTestMapChangeServerClient3Players(60,\,1
\corner."\\,1
getters,1
static_cast<int>(msg.m_state));,1
https://github.com/ocornut/imgui/tree/master/docs,1
v0.2.0.0:,1
obj,1
time-related,1
Clears,1
drawTextShadowed,1
getPos().commit(),1
centered,1
coord,1
tunnel,1
\msg.m_nMagBulletCount,\,1
msg.m_bCrouch);,1
getInput().getMouse().SetCursorPos(),1
query,1
querying,1
\fCursorNewX,\,1
enqueued,1
clientMouseWhenConnectedToServer(),1
synchronization,1
45,1
PlayerTest.h,1
serverUpdateBullets(),1
\"\2\,1
response,1
mapcycleReload(),1
mapcycleSaveToFile(),1
analyse,1
fallback,1
radiobuttons,1
ms,1
(,1
\any,\,1
XPos,1
seperated,1
m_vecUnprojected.getY());,1
Win32,1
\2D,\,1
requesting,1
Opened,1
Basic,1
iObjectBgToBeCopied,1
made,1
NOP,1
img,1
Following,1
Turn,1
mismatch,1
one-time,1
IS,1
\flexible,\,1
iActiveItemMapcycle,1
\validation,\,1
\disconnection,\,1
\1/16,\,1
character,1
\coordinates,\,1
recorded,1
borders,1
'###',1
initiate,1
aim,1
bad:,1
situations,1
hints,1
in-game,1
\surface,\,1
getDeaths());,1
deal,1
\forward,\,1
\high,\,1
m_objSecondary->SetScaling(m_fScalingSecondary);,1
player.getAttack(),1
~55,1
Free,1
established,1
MsgUserDisconnected,1
LEADING,1
(needs,1
\somersaulting),\,1
X-component,1
transitioned,1
close,1
ABOVE,1
execute,1
overall,1
gives,1
uint32_t,1
updateUnprojectedCoords(),1
m_fGravity,1
Reads,1
spawned,1
case),1
\Filename,\,1
detecting,1
autonomuously,1
\MsgUserUpdateFromServer,\,1
\unique,\,1
fCursorNewY);,1
getTickRate(),1
All),1
\tick/sec,\,1
LAN,1
worked,1
\limit,\,1
\..."\\,1
_earlier_,1
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓██░░░▒░███░░███░▒██▓░▓██▒░░▒░███░░░░▓██░░▓██░░███░▓██▒░███░░███░███░░███░░███░███░░░▒░███░░███░▓██▒░░░░░░░░░░░,1
\places,\,1
centering,1
\0],\,1
walking,1
mandatory,1
proofps_dd::DeathMatchMode,1
submenu's,1
Consts.h,1
░░░░░░░░█████▓▓████▓░░░░░░░▓████▓▓▓▓▒░░░░░░░░░░▒▓█████████████████████████████▓░▒▒▒▒▒▒▒░████░▒█████▓████████▓░▓██▓░░██████████▒░███████▒░████████▓░▓██████░░████████▒▓█████████████▒▓███████████████████████████████████████▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
reliable,1
asked,1
collision-tested,1
PgeOldNewValue,1
\activation."\\,1
modified,1
layers,1
issues,1
\unsigned,\,1
follows,1
That,1
slowest,1
figure,1
edge,1
ordinary,1
smarter,1
not-selected,1
\cell,\,1
minimum,1
InputHandling.h,1
encouraged,1
Adds,1
thinks,1
validate,1
(depth):,1
latency,1
MsgUserUpdateFromServer:,1
std::setprecision(),1
\enough,\,1
FALSE,1
Seems,1
vecProjected.getZ());,1
m_objPrimary->SetScaling(m_fScalingPrimary);,1
These,1
okay,1
Unmag,1
DllMain(,1
handleMapItemUpdateFromServer(),1
upper,1
msg.m_szUserName)),1
\[0,\,1
\before,\,1
NOSOUND,1
totally,1
dl->Flags;,1
rectangles,1
learn,1
behaviors,1
Explosion,1
setWillJumpInNextTick(),1
determined,1
Thread,1
solution:,1
your,1
typically,1
\temporarily,\,1
pNewBlockObj->Show();,1
TRAILING,1
audio-visualize,1
simultaneously,1
restrictions,1
Singleton,1
19,1
i);,1
OR,1
\long,\,1
\moved,\,1
XHair.h,1
outage,1
\memset,\,1
getClient(),1
getPure().getUImanager().getDefaultFontSizeLegacy(),1
\reached),\,1
static_cast<int>(nMillisecsJumpDuration));,1
reallocation,1
\jumping,\,1
░░░░░░░░░▒▒▒░░░░░░░░░░░░░░░▒▓▓████████████░██████▒░██████▒░████▒██████████▓████░▒▒▒▒▒▒▒▒██████▒░░▓██████████▓░░▒██████████████▒░▓██████▒░███████████▓░▒░▒███████████░▒█████████████░▒████████████████████████████████████████████████████▒░░░░░░░░░░░░░░░░,1
\WON"\\,1
epoch,1
game-specific,1
(xhair),1
serverPickupAndRespawnItems(),1
pkt's,1
\keyboard(),\,1
\jump(),\,1
free,1
ImGuiTextTableCurrentCellShortenedFit(),1
\callback,\,1
irfanview,1
mpx,1
MapItem.h,1
stopped:,1
synchronouos,1
PFL::strClr(),1
WeaponHandling.h,1
communication,1
multiplied,1
\msg.m_bInvulnerability,\,1
effect:,1
implementing:,1
fX:,1
slows,1
validated,1
proofps_dd::MsgUserSetupFromServer,1
m_nPlayerRespawnInvulnerabilityDelaySecs,1
\getConsole().EOLn("\stopped\,1
error_success,1
getPos().getOld().getZ());,1
knowing,1
n,1
cpp,1
invasive,1
goe,1
statuses,1
decreased,1
transitions,1
Interactive,1
Also,1
m_mapPlayers.find(m_nServerSideConnectionHandle);,1
constructing,1
m_fSomersaultAngleZ,1
fDamageAreaSize,1
protected,1
\keyboard,\,1
auto&,1
expects,1
reasion,1
commit(),1
\non-zero,\,1
earlier;,1
\entries,\,1
flagsDrawListOriginal,1
\Config::getSomersaultMidAirJumpForceMultiplier(),\,1
(proofpsAppMsgId,1
10-15,1
Does,1
\why,\,1
kill,1
\currently,\,1
Successful,1
\commit,\,1
debugger,1
object),1
map.width);,1
rockets,1
\menu,\,1
tables,1
\matrix,\,1
eaten,1
Fetches,1
occasions,1
\getConsole().EOLn("\jump\,1
emplace_back(),1
Tx'd,1
x:,1
initiating,1
Minimap.h,1
CalculateAbsoluteCoordinateX(rectServerGameWindow.right,1
crouch-induced,1
detach,1
ending,1
\later,\,1
InputSim.cpp,1
msg.m_nUnmagBulletCount);,1
copies,1
occasionally,1
thickness,1
░░░░░░▒████░▒████▒░█▓░░░░░░▓███▒░░░░░░░░░░▓████▓▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░▒▓▓▓▓▓▓▓▓▓▓▓█▓██████▓░░░░▒██████████▓████████████████████████████████████████████████████████████████████████████████████████████████████████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░,1
impossible,1
\serverGravity(),\,1
\level,\,1
\off,\,1
\dead,\,1
1980,1
\sound,\,1
entry,1
216;,1
inactive,1
Minimap.cpp,1
%d:,1
fY:,1
pBullet,1
3d,1
\testing,\,1
rects,1
Time,1
pick/select,1
slightly,1
\Config::validate(),\,1
corrects,1
unprojection,1
1:,1
player;,1
no-op,1
updated),1
\getCrouchInput(),\,1
\type,\,1
\operating,\,1
initialization/player,1
defining,1
fScreenDimensionPercentageMax,1
relax,1
SoLoud.h,1
entities,1
inheritance,1
verified,1
\getConsole().EOLn("\Wpn\,1
configure,1
m_maps.width(),1
empty;,1
getUnprojectedCoords(),1
